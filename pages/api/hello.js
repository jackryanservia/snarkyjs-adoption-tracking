import { GoogleSpreadsheet } from "google-spreadsheet";

// Initialize the sheet - doc ID is the long id in the sheets URL
const doc = new GoogleSpreadsheet(
  "1lsPIpLGWYiH2zA0MxKdI0asrRc4l9arHJbzxSOX4twU"
);

const queries = {
  SnarkyJS: "snarkyjs",
  // Circom: 'circom',
  // Leo: 'leo',
  // Noir: 'noir',
  // Cairo: 'cairo',
  // RISC0: 'risc0',
  // ZoKrates: 'zokrates',
  // Gnark: 'gnark'
};

const githubHeaders = new Headers({
  Accept: "application/vnd.github+json",
  Authorization:
    "Bearer " + process.env.GITHUB_TOKEN,
  "X-GitHub-Api-Version": "2022-11-28",
});

const getNumberOfResults = (query) =>
  fetch("https://api.github.com/search/code?per_page=1&q=" + query, {
    headers: githubHeaders,
    method: "GET",
  }).then((res) => res.json().then((data) => data.total_count));

async function getAdoptionStats() {
  const adoptionStats = await Promise.all(
    Object.entries(queries).map(([name, query]) => getNumberOfResults(query))
  );
  return adoptionStats;
}

export default async function handler(req, res) {
  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    private_key: process.env.GOOGLE_PRIVATE_KEY.split(String.raw`\n`).join(
      "\n"
    ),
  });

  await doc.loadInfo(); // loads sheets
  const sheet = doc.sheetsByIndex[0]; // the first sheet

  const adoptionStats = await getAdoptionStats();

  const newRow = await sheet.addRow({
    Date: Date.now(),
    SnarkyJS: adoptionStats.toString(),
  });

  res.status(200).json({ name: "John Doe" });
}
